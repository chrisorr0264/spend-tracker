services:
  db:
    image: postgres:16
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    command: >
      bash -lc "python manage.py collectstatic --noinput &&
                python manage.py migrate &&
                gunicorn config.wsgi:application -b 0.0.0.0:8000 --workers 3 --timeout 120"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on: [db]
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend-dist:/app
    command: sh -c "npx --yes serve -s . -l 5173"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    depends_on: [backend, frontend]
    volumes:
      - ../deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume: